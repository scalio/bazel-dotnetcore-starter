package(default_visibility = ["//visibility:public"])

load("@io_bazel_rules_dotnet//dotnet/private:context.bzl", "core_context_data")

# Context bindings
core_context_data(
    name = "core_context_data",
)

load("@io_bazel_rules_dotnet//dotnet:defs.bzl", "core_binary", "core_library", "dotnet_binary", "dotnet_import_library", "nuget_package")

core_library(
    name = "utility",
    srcs = [
        "Utility/Utility.cs"
    ],
    deps = [
        "@io_bazel_rules_dotnet//dotnet/stdlib.core:system.dll",
        "@io_bazel_rules_dotnet//dotnet/stdlib.core:system.console.dll",
    ],
    visibility = ["//visibility:public"],
)

core_binary(
    name = "bin",
    srcs = [
        "App/Program.cs",
        "App/Utils.cs"
    ],
    deps = [
        "utility",
        "@io_bazel_rules_dotnet//dotnet/stdlib.core:netstandard.dll",
        "@io_bazel_rules_dotnet//dotnet/stdlib.core:system.dll",
        "@io_bazel_rules_dotnet//dotnet/stdlib.core:system.console.dll",
        "@newtonsoft.json//:netcoreapp2.1_core",
    ],
    # visibility = ["//visibility:public"],
)

core_library(
    name = "lib",
    srcs = [
        "App/Program.cs",
        "App/Utils.cs"
    ],
    deps = [
        "@io_bazel_rules_dotnet//dotnet/stdlib.core:system.dll",
        "@io_bazel_rules_dotnet//dotnet/stdlib.core:system.console.dll",
    ],
    visibility = ["//visibility:public"],
)

# bazel build //src:docker
load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image"
)

container_image(
    name = "docker",
    # References container_pull from WORKSPACE (above)
    base = "@dotnet//image",
    files = [":lib"],
    entrypoint = ["dotnet", "lib.dll"]
)